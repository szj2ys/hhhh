import{p as n}from"./@lezer_sass@1.1.0-BJm_jXvl.js";import{L as s,c as i,f as a,d as t,k as m,e as p}from"./@codemirror_language@6.11.1-BYrSuhr8.js";import{defineCSSCompletionSource as d}from"./@codemirror_lang-css@6.3.1-FL7ehuwB.js";import"./@lezer_lr@1.4.2-Ci39YVr6.js";import"./@lezer_common@1.2.3-CP7NCNqd.js";import"./@lezer_highlight@1.2.1-DwVMghhY.js";import"./@codemirror_state@6.5.2-DQ6R6BiX.js";import"./@marijn_find-cluster-break@1.0.2-DXwl3gUT.js";import"./@codemirror_view@6.37.1-Bd3_Yh4F.js";import"./style-mod@4.1.2-Bc2inJdb.js";import"./w3c-keyname@2.2.8-Vcq4gwWv.js";import"./@lezer_css@1.2.1-9WwVtq89.js";const e=s.define({name:"sass",parser:n.configure({props:[a.add({Block:m,Comment(o,r){return{from:o.from+2,to:r.sliceDoc(o.to-2,o.to)=="*/"?o.to-2:o.to}}}),t.add({Declaration:p()})]}),languageData:{commentTokens:{block:{open:"/*",close:"*/"},line:"//"},indentOnInput:/^\s*\}$/,wordChars:"$-"}}),l=e.configure({dialect:"indented",props:[t.add({"Block RuleSet":o=>o.baseIndent+o.unit}),a.add({Block:o=>({from:o.from,to:o.to})})]}),u=d(o=>o.name=="VariableName"||o.name=="SassVariableName");function v(o){return new i(o!=null&&o.indented?l:e,e.data.of({autocomplete:u}))}export{v as sass,u as sassCompletionSource,e as sassLanguage};
