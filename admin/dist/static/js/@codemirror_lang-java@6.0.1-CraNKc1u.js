import{p as r}from"./@lezer_java@1.1.3-iTYy2b4s.js";import{L as s,c as i,d as l,f as d,e as t,h as m,j as c,k as p}from"./@codemirror_language@6.11.1-BYrSuhr8.js";import"./@lezer_lr@1.4.2-Ci39YVr6.js";import"./@lezer_common@1.2.3-CP7NCNqd.js";import"./@lezer_highlight@1.2.1-DwVMghhY.js";import"./@codemirror_state@6.5.2-DQ6R6BiX.js";import"./@marijn_find-cluster-break@1.0.2-DXwl3gUT.js";import"./@codemirror_view@6.37.1-Bd3_Yh4F.js";import"./style-mod@4.1.2-Bc2inJdb.js";import"./w3c-keyname@2.2.8-Vcq4gwWv.js";const u=s.define({name:"java",parser:r.configure({props:[l.add({IfStatement:t({except:/^\s*({|else\b)/}),TryStatement:t({except:/^\s*({|catch|finally)\b/}),LabeledStatement:c,SwitchBlock:e=>{let a=e.textAfter,o=/^\s*\}/.test(a),n=/^\s*(case|default)\b/.test(a);return e.baseIndent+(o?0:n?1:2)*e.unit},Block:m({closing:"}"}),BlockComment:()=>null,Statement:t({except:/^{/})}),d.add({"Block SwitchBlock ClassBody ElementValueArrayInitializer ModuleBody EnumBody ConstructorBody InterfaceBody ArrayInitializer":p,BlockComment(e){return{from:e.from+2,to:e.to-2}}})]}),languageData:{commentTokens:{line:"//",block:{open:"/*",close:"*/"}},indentOnInput:/^\s*(?:case |default:|\{|\})$/}});function h(){return new i(u)}export{h as java,u as javaLanguage};
